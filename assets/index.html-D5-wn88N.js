import{_ as t,c as i,a as l,b as n,f as a,d as p,e as o,r,o as c}from"./app-CJfFg5nr.js";const d={};function y(u,s){const e=r("font");return c(),i("div",null,[s[21]||(s[21]=l(`<div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 参数解析</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># xxx 是文件名</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># grep xxx 是过滤出指定关键字</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># -F 指定分割字符，默认空格</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># $7 是分割后的时间下标，从 1 开始算</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># NR 是关键字，代表总行数</span></span>
<span class="line"><span style="color:#61AFEF;">cat</span><span style="color:#98C379;"> xxx</span><span style="color:#ABB2BF;"> | </span><span style="color:#61AFEF;">grep</span><span style="color:#98C379;"> xxx</span><span style="color:#ABB2BF;"> | </span><span style="color:#61AFEF;">awk</span><span style="color:#D19A66;"> -F</span><span style="color:#98C379;"> &quot;,&quot;</span><span style="color:#98C379;"> &#39;{ sum += $7; } END { print &quot;sum = &quot; sum; print &quot;average = &quot; sum/NR }&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="telnet-远程连接-redis-集群" tabindex="-1"><a class="header-anchor" href="#telnet-远程连接-redis-集群"><span>telnet 远程连接 redis 集群</span></a></h1>`,2)),n("ul",null,[s[3]||(s[3]=n("li",null,"随便找台节点 telnet ip port",-1)),s[4]||(s[4]=n("li",null,"登陆后(可能需要账号密码) 输入 info 获取 master 节点",-1)),s[5]||(s[5]=n("li",null,"quit 退出",-1)),n("li",null,[s[1]||(s[1]=a("再次登录 master 节点(")),p(e,{style:{color:"#E8323C"}},{default:o(()=>s[0]||(s[0]=[a("记得选择数据库")])),_:1}),s[2]||(s[2]=a(")"))])]),s[22]||(s[22]=l(`<h1 id="文件隐藏属性" tabindex="-1"><a class="header-anchor" href="#文件隐藏属性"><span>文件隐藏属性</span></a></h1><ul><li>lsattr 用于展示文件的隐藏属性</li><li>chattr 用于修改文件的隐藏属性</li></ul><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 显示文件隐藏属性</span></span>
<span class="line"><span style="color:#61AFEF;">lsattr</span><span style="color:#98C379;"> fileName</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># -R 表示可以修改整个文件夹下的隐藏属性 - 表示去除属性 + 表示添加属性</span></span>
<span class="line"><span style="color:#61AFEF;">charrt</span><span style="color:#ABB2BF;"> [-RVf] [-+</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">aAcCdDeijsStTu] aa.txt </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 例如去除文件的不可删除属性 i</span></span>
<span class="line"><span style="color:#61AFEF;">charrt</span><span style="color:#D19A66;"> -i</span><span style="color:#98C379;"> aa.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>文件常见隐藏属性：</p><table><thead><tr><th>属性选项</th><th>功能</th></tr></thead><tbody><tr><td>i</td><td>如果对文件设置 i 属性，那么不允许对文件进行删除、改名，也不能添加和修改数据；<br>如果对目录设置 i 属性，那么只能修改目录下文件中的数据，但不允许建立和删除文件；</td></tr><tr><td>a</td><td>如果对文件设置 a 属性，那么只能在文件中増加数据，但是不能删除和修改数据；如果对目录设置 a 属性，那么只允许在目录中建立和修改文件，但是不允许删除文件；</td></tr><tr><td>u</td><td>设置此属性的文件或目录，在删除时，其内容会被保存，以保证后期能够恢复，常用来防止意外删除文件或目录。</td></tr><tr><td>s</td><td>和 u 相反，删除文件或目录时，会被彻底删除（直接从硬盘上删除，然后用 0 填充所占用的区域），不可恢复。</td></tr><tr><td>c</td><td>允许这个文件能被内核自动压缩/解压</td></tr><tr><td>d</td><td>在进行文件系统备份时，dump程序将忽略这个文件</td></tr><tr><td>S</td><td>一旦应用程序对这个文件执行了写操作，使系统立刻把修改的结果写到磁盘</td></tr></tbody></table><h1 id="find" tabindex="-1"><a class="header-anchor" href="#find"><span>find</span></a></h1><h2 id="根据文件名查找" tabindex="-1"><a class="header-anchor" href="#根据文件名查找"><span>根据文件名查找</span></a></h2><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 查找文件忽略大小写</span></span>
<span class="line"><span style="color:#61AFEF;">find</span><span style="color:#98C379;"> /</span><span style="color:#D19A66;"> -iname</span><span style="color:#98C379;"> &quot;test&quot;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 只查找目录</span></span>
<span class="line"><span style="color:#61AFEF;">find</span><span style="color:#98C379;"> /</span><span style="color:#D19A66;"> -type</span><span style="color:#98C379;"> d</span><span style="color:#D19A66;"> -name</span><span style="color:#98C379;"> &quot;test&quot;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 只查找文件</span></span>
<span class="line"><span style="color:#61AFEF;">find</span><span style="color:#98C379;"> /</span><span style="color:#D19A66;"> -type</span><span style="color:#98C379;"> f</span><span style="color:#D19A66;"> -name</span><span style="color:#98C379;"> &quot;test&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="根据权限查找" tabindex="-1"><a class="header-anchor" href="#根据权限查找"><span>根据权限查找</span></a></h2><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 查找拥有 777 权限的文件，这里的第一位表示隐藏权限 SUID 4、SGID 2、SBIT 1</span></span>
<span class="line"><span style="color:#61AFEF;">find</span><span style="color:#98C379;"> /</span><span style="color:#D19A66;"> -perm</span><span style="color:#D19A66;"> 0777</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 查找不含 777 权限的文件</span></span>
<span class="line"><span style="color:#61AFEF;">find</span><span style="color:#98C379;"> /</span><span style="color:#98C379;"> !</span><span style="color:#D19A66;"> -perm</span><span style="color:#D19A66;"> 0777</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 查找空文件</span></span>
<span class="line"><span style="color:#61AFEF;">find</span><span style="color:#98C379;"> /</span><span style="color:#D19A66;"> -type</span><span style="color:#98C379;"> f</span><span style="color:#D19A66;"> -empty</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 查找空目录</span></span>
<span class="line"><span style="color:#61AFEF;">find</span><span style="color:#98C379;"> /</span><span style="color:#D19A66;"> -type</span><span style="color:#98C379;"> d</span><span style="color:#D19A66;"> -empty</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="基于所有者和组查找" tabindex="-1"><a class="header-anchor" href="#基于所有者和组查找"><span>基于所有者和组查找</span></a></h2><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 查找 root 用户文件</span></span>
<span class="line"><span style="color:#61AFEF;">find</span><span style="color:#98C379;"> /</span><span style="color:#D19A66;"> -user</span><span style="color:#98C379;"> root</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 查找 root 用户组文件</span></span>
<span class="line"><span style="color:#61AFEF;">find</span><span style="color:#98C379;"> /</span><span style="color:#D19A66;"> -group</span><span style="color:#98C379;"> root</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="根据日期和时间查找" tabindex="-1"><a class="header-anchor" href="#根据日期和时间查找"><span>根据日期和时间查找</span></a></h2><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 参数包含 atime ctime mtime 分别对应 最近一次访问文件时间（单位：天）、</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 文件状态改变时间（权限、用户、组等等变更）、最近一次修改文件内容时间</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 以下示例均以 mtime 给出</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 假如今天是 10-10 则以下命令表示 最近一次修改日期在 10-07 到 10-08 之间的文件</span></span>
<span class="line"><span style="color:#61AFEF;">find</span><span style="color:#98C379;"> /</span><span style="color:#D19A66;"> -mtime</span><span style="color:#D19A66;"> 3</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 假如今天是 10-10 则以下命令表示 最近一次修改日期在 10-07 到 现在的文件</span></span>
<span class="line"><span style="color:#61AFEF;">find</span><span style="color:#98C379;"> /</span><span style="color:#D19A66;"> -mtime</span><span style="color:#D19A66;"> -3</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 假如今天是 10-10 则以下命令表示 最近一次修改日期在 从文件创建以来到 10-07 的文件</span></span>
<span class="line"><span style="color:#61AFEF;">find</span><span style="color:#98C379;"> /</span><span style="color:#D19A66;"> -mtime</span><span style="color:#98C379;"> +3</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># amin cmin mmin 单位变更为分钟</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="根据文件大小查找" tabindex="-1"><a class="header-anchor" href="#根据文件大小查找"><span>根据文件大小查找</span></a></h2><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 寻找文件并执行之后的指令（这里不可使用指令，例如：ll）</span></span>
<span class="line"><span style="color:#61AFEF;">find</span><span style="color:#98C379;"> /usr/bin</span><span style="color:#98C379;"> /usr/sbin</span><span style="color:#D19A66;"> -perm</span><span style="color:#98C379;"> /7000</span><span style="color:#D19A66;"> -exec</span><span style="color:#98C379;"> ls</span><span style="color:#D19A66;"> -l</span><span style="color:#98C379;"> {}</span><span style="color:#56B6C2;"> \\;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 查找等于 50MB 的文件</span></span>
<span class="line"><span style="color:#61AFEF;">find</span><span style="color:#98C379;"> /</span><span style="color:#D19A66;"> -size</span><span style="color:#98C379;"> 50M</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 查找大于 50MB 的文件</span></span>
<span class="line"><span style="color:#61AFEF;">find</span><span style="color:#98C379;"> /</span><span style="color:#D19A66;"> -size</span><span style="color:#98C379;"> +50M</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 查找小于 50MB 的文件</span></span>
<span class="line"><span style="color:#61AFEF;">find</span><span style="color:#98C379;"> /</span><span style="color:#D19A66;"> -size</span><span style="color:#D19A66;"> -50M</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 查找在 50MB - 100MB 之间的文件</span></span>
<span class="line"><span style="color:#61AFEF;">find</span><span style="color:#98C379;"> /</span><span style="color:#D19A66;"> -size</span><span style="color:#98C379;"> +50M</span><span style="color:#D19A66;"> -size</span><span style="color:#D19A66;"> -100M</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="字符大小写转换" tabindex="-1"><a class="header-anchor" href="#字符大小写转换"><span>字符大小写转换</span></a></h1><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 小写转换</span></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;AAAAA&quot;</span><span style="color:#ABB2BF;"> | </span><span style="color:#61AFEF;">awk</span><span style="color:#98C379;"> &#39;{print tolower($0)}&#39;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 大写转换</span></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;aaaaa&quot;</span><span style="color:#ABB2BF;"> | </span><span style="color:#61AFEF;">awk</span><span style="color:#98C379;"> &#39;{print toupper($0)}&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="windows-下编辑的-bash-在-linux-上运行失败" tabindex="-1"><a class="header-anchor" href="#windows-下编辑的-bash-在-linux-上运行失败"><span>windows 下编辑的 bash 在 linux 上运行失败</span></a></h1><p>主要原因是 windows 和 linux 的换行符不一致导致的（Windos 下是 \\r\\n，Linux 下是 \\n），运行以下命令可直接替换换行符<code>sed -i -e &#39;s/\\r$//&#39; xxx</code></p><h1 id="清空指定目录下的文件内容-多用于日志文件" tabindex="-1"><a class="header-anchor" href="#清空指定目录下的文件内容-多用于日志文件"><span>清空指定目录下的文件内容（多用于日志文件）</span></a></h1><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 清空指定路径下的全部日志文件内容（不清除日志文件本身）</span></span>
<span class="line"><span style="color:#61AFEF;">find</span><span style="color:#98C379;"> /路径</span><span style="color:#D19A66;"> -type</span><span style="color:#98C379;"> f</span><span style="color:#D19A66;"> -exec</span><span style="color:#98C379;"> sh</span><span style="color:#D19A66;"> -c</span><span style="color:#98C379;"> &#39;&gt; &quot;{}&quot;&#39;</span><span style="color:#56B6C2;"> \\;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 删除指定路径下的文件夹</span></span>
<span class="line"><span style="color:#61AFEF;">find</span><span style="color:#98C379;"> /路径</span><span style="color:#D19A66;"> -type</span><span style="color:#98C379;"> d</span><span style="color:#D19A66;"> -name</span><span style="color:#98C379;"> &#39;文件夹名称&#39;</span><span style="color:#D19A66;"> -exec</span><span style="color:#98C379;"> sh</span><span style="color:#D19A66;"> -c</span><span style="color:#98C379;"> &#39;rm -rf &quot;{}&quot;&#39;</span><span style="color:#56B6C2;"> \\;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="文件同步脚本" tabindex="-1"><a class="header-anchor" href="#文件同步脚本"><span>文件同步脚本</span></a></h1><p>命名为 <code>xsync</code>，具体实现参照 <code>sync</code> 命令（方便的将指定目录及其文件同步到其它服务器）最好添加到环境变量中 <code>ln -s xxx/xync /usr/local/bin</code>（该命令将会以源机器目录为准，同步目录一致，删除的文件也会同步删除）</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#!/bin/bash</span></span>
<span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> [ </span><span style="color:#E5C07B;">$#</span><span style="color:#56B6C2;"> -lt</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;"> ]</span></span>
<span class="line"><span style="color:#C678DD;">then</span></span>
<span class="line"><span style="color:#56B6C2;">    echo</span><span style="color:#98C379;"> Not</span><span style="color:#98C379;"> Enough</span><span style="color:#98C379;"> Arguement!</span></span>
<span class="line"><span style="color:#56B6C2;">    exit</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">fi</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#E06C75;"> host</span><span style="color:#C678DD;"> in</span><span style="color:#98C379;"> hadoop14</span><span style="color:#98C379;"> hadoop15</span><span style="color:#98C379;"> hadoop16</span></span>
<span class="line"><span style="color:#C678DD;">do</span></span>
<span class="line"><span style="color:#56B6C2;">    echo</span><span style="color:#98C379;"> ==================</span><span style="color:#E06C75;"> $host</span><span style="color:#98C379;"> ==================</span></span>
<span class="line"><span style="color:#C678DD;">    for</span><span style="color:#E06C75;"> file</span><span style="color:#C678DD;"> in</span><span style="color:#E06C75;font-style:italic;"> $@</span></span>
<span class="line"><span style="color:#C678DD;">    do</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#ABB2BF;"> [ </span><span style="color:#56B6C2;">-e</span><span style="color:#E06C75;"> $file</span><span style="color:#ABB2BF;"> ]</span></span>
<span class="line"><span style="color:#C678DD;">        then</span></span>
<span class="line"><span style="color:#E06C75;">            pdir</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">$(</span><span style="color:#56B6C2;">cd</span><span style="color:#D19A66;"> -P</span><span style="color:#ABB2BF;"> $(</span><span style="color:#61AFEF;">dirname</span><span style="color:#E06C75;"> $file</span><span style="color:#ABB2BF;">); </span><span style="color:#56B6C2;">pwd</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E06C75;">            fname</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">$(</span><span style="color:#61AFEF;">basename</span><span style="color:#E06C75;"> $file</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;">            ssh</span><span style="color:#E06C75;"> $host</span><span style="color:#98C379;"> &quot;mkdir -p </span><span style="color:#E06C75;">$pdir</span><span style="color:#98C379;">&quot;</span></span>
<span class="line"><span style="color:#61AFEF;">            rsync</span><span style="color:#D19A66;"> -qazrpogt</span><span style="color:#E06C75;"> $pdir</span><span style="color:#98C379;">/</span><span style="color:#E06C75;">$fname</span><span style="color:#E06C75;"> $host</span><span style="color:#98C379;">:</span><span style="color:#E06C75;">$pdir</span></span>
<span class="line"><span style="color:#C678DD;">        else</span></span>
<span class="line"><span style="color:#56B6C2;">            echo</span><span style="color:#E06C75;"> $file</span><span style="color:#98C379;"> does</span><span style="color:#98C379;"> not</span><span style="color:#98C379;"> exists!</span></span>
<span class="line"><span style="color:#C678DD;">        fi</span></span>
<span class="line"><span style="color:#C678DD;">    done</span></span>
<span class="line"><span style="color:#C678DD;">done</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="配置免密登录" tabindex="-1"><a class="header-anchor" href="#配置免密登录"><span>配置免密登录</span></a></h1>`,26)),n("p",null,[s[7]||(s[7]=a("首先需要在本机上生成公私钥，可使用 linux 自带的 ssh-keygen 工具生成")),s[8]||(s[8]=n("code",null,"ssh-keygen -t rsa",-1)),s[9]||(s[9]=a("（连敲三次回车），然后开始分发密钥达成免密登录 ")),s[10]||(s[10]=n("code",null,"ssh-copy-id username@host",-1)),s[11]||(s[11]=a("（默认与当前用户一致）需要输入目的机器的密码。（")),p(e,{style:{color:"#DF2A3F"}},{default:o(()=>s[6]||(s[6]=[a("最好对自己也做一次")])),_:1}),s[12]||(s[12]=a("）"))]),s[23]||(s[23]=l('<p>如果没有目标机器用户的密码则可以按照以下操作完成</p><ol><li>首先执行命令输出公钥 <code>cat ~/.ssh/id_rsa.pub</code></li><li>在目标机器的目标用户目录下创建文件 <code>vim ~/.ssh/authorized_keys</code></li><li>将步骤 1 的结果写入到步骤 2 创建的文件保存即可</li><li>首次登录需要输入 yes</li></ol><h1 id="curl-命令使用" tabindex="-1"><a class="header-anchor" href="#curl-命令使用"><span>curl 命令使用</span></a></h1><p>curl 命令详细参数 <a href="https://wangchujiang.com/linux-command/c/curl.html" target="_blank" rel="noopener noreferrer">文档</a></p>',4)),n("ol",null,[s[16]||(s[16]=n("li",null,[a("最多等待 10 秒就超时"),n("code",null,'curl -s -k -m 10 "https://www.baidu.com"')],-1)),s[17]||(s[17]=n("li",null,[a("使用代理发送请求 "),n("code",null,'curl -x http://127.0.0.1:9100 "https://www.google.com"')],-1)),s[18]||(s[18]=n("li",null,[a("只返回状态码 "),n("code",null,`curl -o /dev/null -w '%{http_code}' -s -k -m 10 "https://www.baidu.com"`)],-1)),s[19]||(s[19]=n("li",null,[a("发送请求时自定义请求头"),n("code",null,`curl -X POST -H "Content-Type: application/json" -d '{"name": "John", "message": "This is a \\"test\\" message."}' "https://www.baidu.com"`)],-1)),n("li",null,[s[14]||(s[14]=a("下载文件 ")),s[15]||(s[15]=n("code",null,"curl http://example.com/test.iso -o filename.iso --progress",-1)),p(e,{style:{"background-color":"rgb(246, 248, 250)"}},{default:o(()=>s[13]||(s[13]=[a("（-O 则直接使用远程服务器的文件名）")])),_:1})]),s[20]||(s[20]=n("li",null,"探测存活脚本",-1))]),s[24]||(s[24]=l(`<div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E06C75;">success_prefix</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;{&quot;state&quot;:-1}&#39;</span></span>
<span class="line"><span style="color:#E06C75;">result</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">$(</span><span style="color:#61AFEF;">curl</span><span style="color:#D19A66;"> -s</span><span style="color:#D19A66;"> -k</span><span style="color:#D19A66;"> -m</span><span style="color:#D19A66;"> 10</span><span style="color:#98C379;"> &quot;http://www.baidu.com&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> [[ </span><span style="color:#E06C75;">$result</span><span style="color:#56B6C2;"> ==</span><span style="color:#E06C75;"> $success_prefix</span><span style="color:#ABB2BF;">* ]]; </span><span style="color:#C678DD;">then</span></span>
<span class="line"><span style="color:#56B6C2;">  echo</span><span style="color:#98C379;"> &quot;url is normal&quot;</span></span>
<span class="line"><span style="color:#C678DD;">else</span></span>
<span class="line"><span style="color:#56B6C2;">  echo</span><span style="color:#98C379;"> &quot;url is error&quot;</span></span>
<span class="line"><span style="color:#C678DD;">fi</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="服务器-tcp-连接情况查询" tabindex="-1"><a class="header-anchor" href="#服务器-tcp-连接情况查询"><span>服务器 TCP 连接情况查询</span></a></h1><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 查看状态为 TIME_WAIT 的 TCP 连接</span></span>
<span class="line"><span style="color:#61AFEF;">netstat</span><span style="color:#D19A66;"> -tan</span><span style="color:#ABB2BF;"> | </span><span style="color:#61AFEF;">grep</span><span style="color:#98C379;"> TIME_WAIT</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 统计 TCP 各种状态的连接数</span></span>
<span class="line"><span style="color:#61AFEF;">netstat</span><span style="color:#D19A66;"> -n</span><span style="color:#ABB2BF;"> | </span><span style="color:#61AFEF;">awk</span><span style="color:#98C379;"> &#39;/^tcp/ {++S[$NF]} END {for(i in S) print i, S[i]}&#39;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 统计监听端口 8080 的应用所有连接状态（如果只想查看某一种状态可以添加 -o state established）</span></span>
<span class="line"><span style="color:#61AFEF;">ss</span><span style="color:#D19A66;"> -t</span><span style="color:#D19A66;"> -a</span><span style="color:#98C379;"> &#39;sport = :8080 or dport = :8080&#39;</span><span style="color:#ABB2BF;"> | </span><span style="color:#61AFEF;">awk</span><span style="color:#98C379;"> &#39;{print $1}&#39;</span><span style="color:#ABB2BF;"> | </span><span style="color:#61AFEF;">sort</span><span style="color:#ABB2BF;"> | </span><span style="color:#61AFEF;">uniq</span><span style="color:#D19A66;"> -c</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 列出监听指定端口的所有 TCP 状态</span></span>
<span class="line"><span style="color:#61AFEF;">ss</span><span style="color:#D19A66;"> -t</span><span style="color:#D19A66;"> -a</span><span style="color:#98C379;"> &#39;( sport = :8080 or dport = :8080 )&#39;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 各类情况统计</span></span>
<span class="line"><span style="color:#61AFEF;">netstat</span><span style="color:#D19A66;"> -n</span><span style="color:#ABB2BF;"> | </span><span style="color:#61AFEF;">awk</span><span style="color:#98C379;"> &#39;/^tcp/ {++state[$NF]} END {for(key in state) print key,&quot;\\t&quot;,state[key]}&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="删除注释行" tabindex="-1"><a class="header-anchor" href="#删除注释行"><span>删除注释行</span></a></h1><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 删除 # 开头的整行（删除注释行）</span></span>
<span class="line"><span style="color:#61AFEF;">sed</span><span style="color:#D19A66;"> -i</span><span style="color:#98C379;"> &#39;/^#/d&#39;</span><span style="color:#98C379;"> filename</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 以下命令会同时删除 # 开头的整行和空白整行（删除注释和空白行）</span></span>
<span class="line"><span style="color:#61AFEF;">sed</span><span style="color:#D19A66;"> -i</span><span style="color:#98C379;"> &#39;/^#/d;/^$/d&#39;</span><span style="color:#98C379;"> filename</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 以下命令将删除文件所有行开头中的 # 以及后面的空白字符（取消注释）</span></span>
<span class="line"><span style="color:#61AFEF;">sed</span><span style="color:#D19A66;"> -i</span><span style="color:#98C379;"> &#39;s/^#\\s*//&#39;</span><span style="color:#98C379;"> filename</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="根据-pid-查看进程监听的端口" tabindex="-1"><a class="header-anchor" href="#根据-pid-查看进程监听的端口"><span>根据 PID 查看进程监听的端口</span></a></h1><p>可以使用 ss 或者 netstat 命令</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">netstat</span><span style="color:#D19A66;"> -tulpn</span><span style="color:#ABB2BF;"> | </span><span style="color:#61AFEF;">grep</span><span style="color:#ABB2BF;"> &lt;</span><span style="color:#98C379;">PI</span><span style="color:#ABB2BF;">D&gt;</span></span>
<span class="line"><span style="color:#61AFEF;">ss</span><span style="color:#D19A66;"> -lptn</span><span style="color:#ABB2BF;"> | </span><span style="color:#61AFEF;">grep</span><span style="color:#ABB2BF;"> &lt;</span><span style="color:#98C379;">PI</span><span style="color:#ABB2BF;">D&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="查看指定服务端口是否连通" tabindex="-1"><a class="header-anchor" href="#查看指定服务端口是否连通"><span>查看指定服务端口是否连通</span></a></h1><p>可以使用 telnet 或者 nc 命令</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># telnet 测试的端口必需有服务在监听</span></span>
<span class="line"><span style="color:#61AFEF;">telnet</span><span style="color:#98C379;"> ip</span><span style="color:#98C379;"> port</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># -w 表示超时时间（单位秒）</span></span>
<span class="line"><span style="color:#61AFEF;">nc</span><span style="color:#D19A66;"> -vzw5</span><span style="color:#98C379;"> ip</span><span style="color:#98C379;"> port</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 如果目标服务端口没有应用监听端口则可以使用 nc 来启动监听端口服务</span></span>
<span class="line"><span style="color:#61AFEF;">nc</span><span style="color:#D19A66;"> -lkp</span><span style="color:#98C379;"> port</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="服务器通过开放的端口实现文件传输" tabindex="-1"><a class="header-anchor" href="#服务器通过开放的端口实现文件传输"><span>服务器通过开放的端口实现文件传输</span></a></h1><p>可以使用 nc 命令 或者 python 自带的服务</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 首先需要在接受方开启监听 fileName 需要自定义名称（建议与发送方保持一致）</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 每次只能接收一个文件（用于简单传输小文件）</span></span>
<span class="line"><span style="color:#61AFEF;">nc</span><span style="color:#D19A66;"> -lp</span><span style="color:#98C379;"> port</span><span style="color:#ABB2BF;"> &gt; </span><span style="color:#98C379;">fileName</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 然后在发送方传输文件（传输完成后需要手动 ctrl c 退出）</span></span>
<span class="line"><span style="color:#61AFEF;">nc</span><span style="color:#D19A66;"> -nv</span><span style="color:#98C379;"> ip</span><span style="color:#98C379;"> port</span><span style="color:#ABB2BF;"> &lt; </span><span style="color:#98C379;">fileName</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 可以通过 python 内置的 http 服务启动文件服务（不支持文件上传）</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># python2 </span></span>
<span class="line"><span style="color:#61AFEF;">python</span><span style="color:#D19A66;"> -m</span><span style="color:#98C379;"> SimpleHTTPServer</span><span style="color:#98C379;"> port</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># python3</span></span>
<span class="line"><span style="color:#61AFEF;">python</span><span style="color:#D19A66;"> -m</span><span style="color:#98C379;"> http.server</span><span style="color:#98C379;"> port</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 可通过 wget 命令进行文件下载</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="统一的将指定文件夹下的文件-文件夹设置属性" tabindex="-1"><a class="header-anchor" href="#统一的将指定文件夹下的文件-文件夹设置属性"><span>统一的将指定文件夹下的文件/文件夹设置属性</span></a></h1><p>可以通过 find 命令和 exec 配合实现</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 将当前文件夹下的所有文件夹都设置为 755</span></span>
<span class="line"><span style="color:#61AFEF;">find</span><span style="color:#98C379;"> .</span><span style="color:#D19A66;"> -type</span><span style="color:#98C379;"> d</span><span style="color:#D19A66;"> -exec</span><span style="color:#98C379;"> chmod</span><span style="color:#D19A66;"> 755</span><span style="color:#98C379;"> &#39;{}&#39;</span><span style="color:#56B6C2;"> \\;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 将当前文件夹下的所有文件都设置为 777</span></span>
<span class="line"><span style="color:#61AFEF;">find</span><span style="color:#98C379;"> .</span><span style="color:#D19A66;"> -exec</span><span style="color:#98C379;"> chmod</span><span style="color:#D19A66;"> 777</span><span style="color:#98C379;"> &#39;{}&#39;</span><span style="color:#56B6C2;"> \\;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17))])}const b=t(d,[["render",y],["__file","index.html.vue"]]),m=JSON.parse('{"path":"/article/yauuumex/","title":"bash","lang":"zh-CN","frontmatter":{"title":"bash","tags":["bash","os"],"createTime":"2025/03/03 21:33:39","permalink":"/article/yauuumex/","description":"telnet 远程连接 redis 集群 随便找台节点 telnet ip port 登陆后(可能需要账号密码) 输入 info 获取 master 节点 quit 退出 再次登录 master 节点() 文件隐藏属性 lsattr 用于展示文件的隐藏属性 chattr 用于修改文件的隐藏属性 文件常见隐藏属性： find 根据文件名查找 根据权限查找...","head":[["meta",{"property":"og:url","content":"https://upcloudrabbit.github.io/blog/blog/article/yauuumex/"}],["meta",{"property":"og:site_name","content":"upcloudrabbit blog"}],["meta",{"property":"og:title","content":"bash"}],["meta",{"property":"og:description","content":"telnet 远程连接 redis 集群 随便找台节点 telnet ip port 登陆后(可能需要账号密码) 输入 info 获取 master 节点 quit 退出 再次登录 master 节点() 文件隐藏属性 lsattr 用于展示文件的隐藏属性 chattr 用于修改文件的隐藏属性 文件常见隐藏属性： find 根据文件名查找 根据权限查找..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-03T13:39:29.000Z"}],["meta",{"property":"article:tag","content":"bash"}],["meta",{"property":"article:tag","content":"os"}],["meta",{"property":"article:modified_time","content":"2025-03-03T13:39:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"bash\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-03T13:39:29.000Z\\",\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":7.52,"words":2256},"git":{"updatedTime":1741009169000,"contributors":[{"name":"upcloudrabbit","username":"upcloudrabbit","email":"1814876440@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/upcloudrabbit?v=4","url":"https://github.com/upcloudrabbit"}]},"autoDesc":true,"filePathRelative":"os/bash.md","categoryList":[{"id":"dd302f","sort":10000,"name":"os"}]}');export{b as comp,m as data};
